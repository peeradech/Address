// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package address.proxies;

public class SubDistrict
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject subDistrictMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Address.SubDistrict";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SubDistrictCode("SubDistrictCode"),
		SubDistrict("SubDistrict"),
		IsActive("IsActive"),
		SubDistrict_Province("Address.SubDistrict_Province"),
		SubDistrict_District("Address.SubDistrict_District");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SubDistrict(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Address.SubDistrict"));
	}

	protected SubDistrict(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject subDistrictMendixObject)
	{
		if (subDistrictMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Address.SubDistrict", subDistrictMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Address.SubDistrict");

		this.subDistrictMendixObject = subDistrictMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SubDistrict.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static address.proxies.SubDistrict initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return address.proxies.SubDistrict.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static address.proxies.SubDistrict initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new address.proxies.SubDistrict(context, mendixObject);
	}

	public static address.proxies.SubDistrict load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return address.proxies.SubDistrict.initialize(context, mendixObject);
	}

	public static java.util.List<address.proxies.SubDistrict> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<address.proxies.SubDistrict> result = new java.util.ArrayList<address.proxies.SubDistrict>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Address.SubDistrict" + xpathConstraint))
			result.add(address.proxies.SubDistrict.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of SubDistrictCode
	 */
	public final java.lang.String getSubDistrictCode()
	{
		return getSubDistrictCode(getContext());
	}

	/**
	 * @param context
	 * @return value of SubDistrictCode
	 */
	public final java.lang.String getSubDistrictCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SubDistrictCode.toString());
	}

	/**
	 * Set value of SubDistrictCode
	 * @param subdistrictcode
	 */
	public final void setSubDistrictCode(java.lang.String subdistrictcode)
	{
		setSubDistrictCode(getContext(), subdistrictcode);
	}

	/**
	 * Set value of SubDistrictCode
	 * @param context
	 * @param subdistrictcode
	 */
	public final void setSubDistrictCode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subdistrictcode)
	{
		getMendixObject().setValue(context, MemberNames.SubDistrictCode.toString(), subdistrictcode);
	}

	/**
	 * @return value of SubDistrict
	 */
	public final java.lang.String getSubDistrict()
	{
		return getSubDistrict(getContext());
	}

	/**
	 * @param context
	 * @return value of SubDistrict
	 */
	public final java.lang.String getSubDistrict(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SubDistrict.toString());
	}

	/**
	 * Set value of SubDistrict
	 * @param subdistrict
	 */
	public final void setSubDistrict(java.lang.String subdistrict)
	{
		setSubDistrict(getContext(), subdistrict);
	}

	/**
	 * Set value of SubDistrict
	 * @param context
	 * @param subdistrict
	 */
	public final void setSubDistrict(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subdistrict)
	{
		getMendixObject().setValue(context, MemberNames.SubDistrict.toString(), subdistrict);
	}

	/**
	 * @return value of IsActive
	 */
	public final java.lang.Boolean getIsActive()
	{
		return getIsActive(getContext());
	}

	/**
	 * @param context
	 * @return value of IsActive
	 */
	public final java.lang.Boolean getIsActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsActive.toString());
	}

	/**
	 * Set value of IsActive
	 * @param isactive
	 */
	public final void setIsActive(java.lang.Boolean isactive)
	{
		setIsActive(getContext(), isactive);
	}

	/**
	 * Set value of IsActive
	 * @param context
	 * @param isactive
	 */
	public final void setIsActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isactive)
	{
		getMendixObject().setValue(context, MemberNames.IsActive.toString(), isactive);
	}

	/**
	 * @return value of SubDistrict_Province
	 */
	public final address.proxies.Province getSubDistrict_Province() throws com.mendix.core.CoreException
	{
		return getSubDistrict_Province(getContext());
	}

	/**
	 * @param context
	 * @return value of SubDistrict_Province
	 */
	public final address.proxies.Province getSubDistrict_Province(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		address.proxies.Province result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SubDistrict_Province.toString());
		if (identifier != null)
			result = address.proxies.Province.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SubDistrict_Province
	 * @param subdistrict_province
	 */
	public final void setSubDistrict_Province(address.proxies.Province subdistrict_province)
	{
		setSubDistrict_Province(getContext(), subdistrict_province);
	}

	/**
	 * Set value of SubDistrict_Province
	 * @param context
	 * @param subdistrict_province
	 */
	public final void setSubDistrict_Province(com.mendix.systemwideinterfaces.core.IContext context, address.proxies.Province subdistrict_province)
	{
		if (subdistrict_province == null)
			getMendixObject().setValue(context, MemberNames.SubDistrict_Province.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SubDistrict_Province.toString(), subdistrict_province.getMendixObject().getId());
	}

	/**
	 * @return value of SubDistrict_District
	 */
	public final address.proxies.District getSubDistrict_District() throws com.mendix.core.CoreException
	{
		return getSubDistrict_District(getContext());
	}

	/**
	 * @param context
	 * @return value of SubDistrict_District
	 */
	public final address.proxies.District getSubDistrict_District(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		address.proxies.District result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SubDistrict_District.toString());
		if (identifier != null)
			result = address.proxies.District.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SubDistrict_District
	 * @param subdistrict_district
	 */
	public final void setSubDistrict_District(address.proxies.District subdistrict_district)
	{
		setSubDistrict_District(getContext(), subdistrict_district);
	}

	/**
	 * Set value of SubDistrict_District
	 * @param context
	 * @param subdistrict_district
	 */
	public final void setSubDistrict_District(com.mendix.systemwideinterfaces.core.IContext context, address.proxies.District subdistrict_district)
	{
		if (subdistrict_district == null)
			getMendixObject().setValue(context, MemberNames.SubDistrict_District.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SubDistrict_District.toString(), subdistrict_district.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return subDistrictMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final address.proxies.SubDistrict that = (address.proxies.SubDistrict) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Address.SubDistrict";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
