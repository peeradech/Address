// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package address.proxies;

public class Postcode
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject postcodeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Address.Postcode";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Postcode("Postcode"),
		Remark("Remark"),
		IsActive("IsActive"),
		Postcode_Province("Address.Postcode_Province"),
		Postcode_SubDistrict("Address.Postcode_SubDistrict"),
		Postcode_District("Address.Postcode_District");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Postcode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Address.Postcode"));
	}

	protected Postcode(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject postcodeMendixObject)
	{
		if (postcodeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Address.Postcode", postcodeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Address.Postcode");

		this.postcodeMendixObject = postcodeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Postcode.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static address.proxies.Postcode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return address.proxies.Postcode.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static address.proxies.Postcode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new address.proxies.Postcode(context, mendixObject);
	}

	public static address.proxies.Postcode load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return address.proxies.Postcode.initialize(context, mendixObject);
	}

	public static java.util.List<address.proxies.Postcode> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<address.proxies.Postcode> result = new java.util.ArrayList<address.proxies.Postcode>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Address.Postcode" + xpathConstraint))
			result.add(address.proxies.Postcode.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Postcode
	 */
	public final java.lang.String getPostcode()
	{
		return getPostcode(getContext());
	}

	/**
	 * @param context
	 * @return value of Postcode
	 */
	public final java.lang.String getPostcode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Postcode.toString());
	}

	/**
	 * Set value of Postcode
	 * @param postcode
	 */
	public final void setPostcode(java.lang.String postcode)
	{
		setPostcode(getContext(), postcode);
	}

	/**
	 * Set value of Postcode
	 * @param context
	 * @param postcode
	 */
	public final void setPostcode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String postcode)
	{
		getMendixObject().setValue(context, MemberNames.Postcode.toString(), postcode);
	}

	/**
	 * @return value of Remark
	 */
	public final java.lang.String getRemark()
	{
		return getRemark(getContext());
	}

	/**
	 * @param context
	 * @return value of Remark
	 */
	public final java.lang.String getRemark(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Remark.toString());
	}

	/**
	 * Set value of Remark
	 * @param remark
	 */
	public final void setRemark(java.lang.String remark)
	{
		setRemark(getContext(), remark);
	}

	/**
	 * Set value of Remark
	 * @param context
	 * @param remark
	 */
	public final void setRemark(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String remark)
	{
		getMendixObject().setValue(context, MemberNames.Remark.toString(), remark);
	}

	/**
	 * @return value of IsActive
	 */
	public final java.lang.Boolean getIsActive()
	{
		return getIsActive(getContext());
	}

	/**
	 * @param context
	 * @return value of IsActive
	 */
	public final java.lang.Boolean getIsActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsActive.toString());
	}

	/**
	 * Set value of IsActive
	 * @param isactive
	 */
	public final void setIsActive(java.lang.Boolean isactive)
	{
		setIsActive(getContext(), isactive);
	}

	/**
	 * Set value of IsActive
	 * @param context
	 * @param isactive
	 */
	public final void setIsActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isactive)
	{
		getMendixObject().setValue(context, MemberNames.IsActive.toString(), isactive);
	}

	/**
	 * @return value of Postcode_Province
	 */
	public final address.proxies.Province getPostcode_Province() throws com.mendix.core.CoreException
	{
		return getPostcode_Province(getContext());
	}

	/**
	 * @param context
	 * @return value of Postcode_Province
	 */
	public final address.proxies.Province getPostcode_Province(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		address.proxies.Province result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Postcode_Province.toString());
		if (identifier != null)
			result = address.proxies.Province.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Postcode_Province
	 * @param postcode_province
	 */
	public final void setPostcode_Province(address.proxies.Province postcode_province)
	{
		setPostcode_Province(getContext(), postcode_province);
	}

	/**
	 * Set value of Postcode_Province
	 * @param context
	 * @param postcode_province
	 */
	public final void setPostcode_Province(com.mendix.systemwideinterfaces.core.IContext context, address.proxies.Province postcode_province)
	{
		if (postcode_province == null)
			getMendixObject().setValue(context, MemberNames.Postcode_Province.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Postcode_Province.toString(), postcode_province.getMendixObject().getId());
	}

	/**
	 * @return value of Postcode_SubDistrict
	 */
	public final address.proxies.SubDistrict getPostcode_SubDistrict() throws com.mendix.core.CoreException
	{
		return getPostcode_SubDistrict(getContext());
	}

	/**
	 * @param context
	 * @return value of Postcode_SubDistrict
	 */
	public final address.proxies.SubDistrict getPostcode_SubDistrict(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		address.proxies.SubDistrict result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Postcode_SubDistrict.toString());
		if (identifier != null)
			result = address.proxies.SubDistrict.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Postcode_SubDistrict
	 * @param postcode_subdistrict
	 */
	public final void setPostcode_SubDistrict(address.proxies.SubDistrict postcode_subdistrict)
	{
		setPostcode_SubDistrict(getContext(), postcode_subdistrict);
	}

	/**
	 * Set value of Postcode_SubDistrict
	 * @param context
	 * @param postcode_subdistrict
	 */
	public final void setPostcode_SubDistrict(com.mendix.systemwideinterfaces.core.IContext context, address.proxies.SubDistrict postcode_subdistrict)
	{
		if (postcode_subdistrict == null)
			getMendixObject().setValue(context, MemberNames.Postcode_SubDistrict.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Postcode_SubDistrict.toString(), postcode_subdistrict.getMendixObject().getId());
	}

	/**
	 * @return value of Postcode_District
	 */
	public final address.proxies.District getPostcode_District() throws com.mendix.core.CoreException
	{
		return getPostcode_District(getContext());
	}

	/**
	 * @param context
	 * @return value of Postcode_District
	 */
	public final address.proxies.District getPostcode_District(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		address.proxies.District result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Postcode_District.toString());
		if (identifier != null)
			result = address.proxies.District.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Postcode_District
	 * @param postcode_district
	 */
	public final void setPostcode_District(address.proxies.District postcode_district)
	{
		setPostcode_District(getContext(), postcode_district);
	}

	/**
	 * Set value of Postcode_District
	 * @param context
	 * @param postcode_district
	 */
	public final void setPostcode_District(com.mendix.systemwideinterfaces.core.IContext context, address.proxies.District postcode_district)
	{
		if (postcode_district == null)
			getMendixObject().setValue(context, MemberNames.Postcode_District.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Postcode_District.toString(), postcode_district.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return postcodeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final address.proxies.Postcode that = (address.proxies.Postcode) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Address.Postcode";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
